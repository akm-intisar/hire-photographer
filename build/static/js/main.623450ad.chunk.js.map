{"version":3,"sources":["Images/photo-1.jpg","Components/Home/Home.js","Components/Freelancer/Freelancer.js","Components/DonateUs/DonateUs.js","Images/photo-2.jpg","Components/About/About.js","Components/Login/Login.js","Components/UrgentNeed/UrgentNeed.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","Image","src","homepagePhoto","Freelancer","Figure","width","height","alt","Caption","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","CardField","onChange","options","Field","label","type","placeholder","required","autoComplete","value","htmlFor","SubmitButton","processing","error","children","disabled","ErrorMessage","role","viewBox","fill","d","ResetButton","onClick","CheckoutForm","stripe","useStripe","elements","useElements","useState","setError","cardComplete","setCardComplete","setProcessing","paymentMethod","setPaymentMethod","email","phone","name","billingDetails","setBillingDetails","handleSubmit","event","a","preventDefault","getElement","focus","createPaymentMethod","card","CardElement","billing_details","payload","onSubmit","e","target","complete","message","ELEMENTS_OPTIONS","fonts","cssSrc","stripePromise","loadStripe","DonateUs","About","Photo","Login","auth","getAuth","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","accessToken","user","catch","code","credentialFromError","Button","UrgentNeed","Alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.623450ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/photo-1.eb3a8985.jpg\";","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Image, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport homepagePhoto from \"../../Images/photo-1.jpg\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/home\">Photographer On Budget</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/company\">Company</Nav.Link>\r\n              <Nav.Link href=\"/freelancer\">Freelancer</Nav.Link>\r\n              <NavDropdown title=\"Event\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/DonateUs\">DonateUs</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/birthday\">Birthday</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/official\">\r\n                  Office Party\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/program\">\r\n                  Organizational Program\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link href=\"/about\">About Us</Nav.Link>\r\n              <Nav.Link eventKey={2} href=\"/urgent\">\r\n                Urgent Need!\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <div className='bg-image'>\r\n      <Image src={homepagePhoto} className=\"d-block mx-auto img-fluid w-100\" >\r\n\r\n      </Image>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Figure } from \"react-bootstrap\";\r\n\r\nconst Freelancer = () => {\r\n  return (\r\n    <div>\r\n      <Figure>\r\n        <Figure.Image\r\n          width={171}\r\n          height={180}\r\n          alt=\"171x180\"\r\n          src={\"https://scontent.fdac7-1.fna.fbcdn.net/v/t1.6435-9/234823319_2125232974296268_7024097236028108888_n.jpg?_nc_cat=102&ccb=1-5&_nc_sid=0debeb&_nc_ohc=i_A0Rv8YT1IAX8nLUYH&_nc_ht=scontent.fdac7-1.fna&oh=7ad1ec5761f2be3617e9fcb803ea71c7&oe=61422089\"}\r\n        />\r\n        <Figure.Caption>\r\n          Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n        </Figure.Caption>\r\n      </Figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Freelancer;\r\n","// This example shows you how to set up React Stripe.js and use Elements.\r\n// Learn how to accept a payment using the official Stripe docs.\r\n// https://www.stripe.com/docs/payments/integration-builder\r\n\r\nimport React, { useState } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe\r\n} from \"@stripe/react-stripe-js\";\r\nimport \"./DonateUs.css\";\r\n\r\nconst CARD_OPTIONS = {\r\n  iconStyle: \"solid\",\r\n  style: {\r\n    base: {\r\n      iconColor: \"#c4f0ff\",\r\n      color: \"#fff\",\r\n      fontWeight: 500,\r\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n      fontSize: \"16px\",\r\n      fontSmoothing: \"antialiased\",\r\n      \":-webkit-autofill\": {\r\n        color: \"#fce883\"\r\n      },\r\n      \"::placeholder\": {\r\n        color: \"#87bbfd\"\r\n      }\r\n    },\r\n    invalid: {\r\n      iconColor: \"#ffc7ee\",\r\n      color: \"#ffc7ee\"\r\n    }\r\n  }\r\n};\r\n\r\nconst CardField = ({ onChange }) => (\r\n  <div className=\"FormRow\">\r\n    <CardElement options={CARD_OPTIONS} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nconst Field = ({\r\n  label,\r\n  id,\r\n  type,\r\n  placeholder,\r\n  required,\r\n  autoComplete,\r\n  value,\r\n  onChange\r\n}) => (\r\n  <div className=\"FormRow\">\r\n    <label htmlFor={id} className=\"FormRowLabel\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      className=\"FormRowInput\"\r\n      id={id}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      autoComplete={autoComplete}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst SubmitButton = ({ processing, error, children, disabled }) => (\r\n  <button\r\n    className={`SubmitButton ${error ? \"SubmitButton--error\" : \"\"}`}\r\n    type=\"submit\"\r\n    disabled={processing || disabled}\r\n  >\r\n    {processing ? \"Processing...\" : children}\r\n  </button>\r\n);\r\n\r\nconst ErrorMessage = ({ children }) => (\r\n  <div className=\"ErrorMessage\" role=\"alert\">\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 17 17\">\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z\"\r\n      />\r\n      <path\r\n        fill=\"#6772e5\"\r\n        d=\"M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z\"\r\n      />\r\n    </svg>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst ResetButton = ({ onClick }) => (\r\n  <button type=\"button\" className=\"ResetButton\" onClick={onClick}>\r\n    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M15,7.05492878 C10.5000495,7.55237307 7,11.3674463 7,16 C7,20.9705627 11.0294373,25 16,25 C20.9705627,25 25,20.9705627 25,16 C25,15.3627484 24.4834055,14.8461538 23.8461538,14.8461538 C23.2089022,14.8461538 22.6923077,15.3627484 22.6923077,16 C22.6923077,19.6960595 19.6960595,22.6923077 16,22.6923077 C12.3039405,22.6923077 9.30769231,19.6960595 9.30769231,16 C9.30769231,12.3039405 12.3039405,9.30769231 16,9.30769231 L16,12.0841673 C16,12.1800431 16.0275652,12.2738974 16.0794108,12.354546 C16.2287368,12.5868311 16.5380938,12.6540826 16.7703788,12.5047565 L22.3457501,8.92058924 L22.3457501,8.92058924 C22.4060014,8.88185624 22.4572275,8.83063012 22.4959605,8.7703788 C22.6452866,8.53809377 22.5780351,8.22873685 22.3457501,8.07941076 L22.3457501,8.07941076 L16.7703788,4.49524351 C16.6897301,4.44339794 16.5958758,4.41583275 16.5,4.41583275 C16.2238576,4.41583275 16,4.63969037 16,4.91583275 L16,7 L15,7 L15,7.05492878 Z M16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 Z\"\r\n      />\r\n    </svg>\r\n  </button>\r\n);\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [cardComplete, setCardComplete] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n  const [billingDetails, setBillingDetails] = useState({\r\n    email: \"\",\r\n    phone: \"\",\r\n    name: \"\"\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      elements.getElement(\"card\").focus();\r\n      return;\r\n    }\r\n\r\n    if (cardComplete) {\r\n      setProcessing(true);\r\n    }\r\n\r\n    const payload = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n      billing_details: billingDetails\r\n    });\r\n\r\n    setProcessing(false);\r\n\r\n    if (payload.error) {\r\n      setError(payload.error);\r\n    } else {\r\n      setPaymentMethod(payload.paymentMethod);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setError(null);\r\n    setProcessing(false);\r\n    setPaymentMethod(null);\r\n    setBillingDetails({\r\n      email: \"\",\r\n      phone: \"\",\r\n      name: \"\"\r\n    });\r\n  };\r\n\r\n  return paymentMethod ? (\r\n    <div className=\"Result\">\r\n      <div className=\"ResultTitle\" role=\"alert\">\r\n        Payment successful\r\n      </div>\r\n      <div className=\"ResultMessage\">\r\n        Thanks for trying Stripe Elements. No money was charged, but we\r\n        generated a PaymentMethod: {paymentMethod.id}\r\n      </div>\r\n      <ResetButton onClick={reset} />\r\n    </div>\r\n  ) : (\r\n    <form className=\"Form\" onSubmit={handleSubmit}>\r\n      <fieldset className=\"FormGroup\">\r\n        <Field\r\n          label=\"Name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Jane Doe\"\r\n          required\r\n          autoComplete=\"name\"\r\n          value={billingDetails.name}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, name: e.target.value });\r\n          }}\r\n        />\r\n        <Field\r\n          label=\"Email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"janedoe@gmail.com\"\r\n          required\r\n          autoComplete=\"email\"\r\n          value={billingDetails.email}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, email: e.target.value });\r\n          }}\r\n        />\r\n        <Field\r\n          label=\"Phone\"\r\n          id=\"phone\"\r\n          type=\"tel\"\r\n          placeholder=\"(941) 555-0123\"\r\n          required\r\n          autoComplete=\"tel\"\r\n          value={billingDetails.phone}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, phone: e.target.value });\r\n          }}\r\n        />\r\n      </fieldset>\r\n      <fieldset className=\"FormGroup\">\r\n        <CardField\r\n          onChange={(e) => {\r\n            setError(e.error);\r\n            setCardComplete(e.complete);\r\n          }}\r\n        />\r\n      </fieldset>\r\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\r\n      <SubmitButton processing={processing} error={error} disabled={!stripe}>\r\n        Pay $25\r\n      </SubmitButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ELEMENTS_OPTIONS = {\r\n  fonts: [\r\n    {\r\n      cssSrc: \"https://fonts.googleapis.com/css?family=Roboto\"\r\n    }\r\n  ]\r\n};\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\r\n\r\nconst DonateUs = () => {\r\n  return (\r\n    <div className=\"DonateUsWrDonateUser\">\r\n      <Elements stripe={stripePromise} options={ELEMENTS_OPTIONS}>\r\n        <CheckoutForm />\r\n      </Elements>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonateUs;\r\n","export default __webpack_public_path__ + \"static/media/photo-2.f71f07c6.jpg\";","import React from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport Photo from \"../../Images/photo-2.jpg\"\r\nimport \"./About.css\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className='bg-image '>\r\n        <Image src={Photo} className=\"d-block mx-auto img-fluid w-100\" alt=\"Photo\">\r\n        \r\n        </Image>\r\n        <div className=\"centered\">Centered</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const auth = getAuth();\r\nconst provider = new GoogleAuthProvider();\r\nsignInWithPopup(auth, provider)\r\n  .then((result) => {\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n    const token = credential.accessToken;\r\n    // The signed-in user info.\r\n    const user = result.user;\r\n    // ...\r\n  }).catch((error) => {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The AuthCredential type that was used.\r\n    const credential = GoogleAuthProvider.credentialFromError(error);\r\n    // ...\r\n  });\r\n    return (\r\n        <div>\r\n            <Button>Sign In Using Google</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert } from 'reactstrap';\r\nimport Login from \"../Login/Login\";\r\n\r\n\r\nconst UrgentNeed = () => {\r\n  return (\r\n    <div>\r\n                  <Alert color=\"danger\">\r\n        <h4 className=\"alert-heading\">We're here 24/7 to help you out!</h4>\r\n        <p>\r\n          Here is out 24/7 active hotline number. If you need any kind of service that is unavailable in our system. Do a phone call or send a sms. You can also drop a mail! \r\n        </p>\r\n        <hr />\r\n        <p className=\"mb-0\">\r\n          Call 01010101010101 <br></br>\r\n          Email: urgent@hirephotogrpaher.com\r\n        </p>\r\n        <Login></Login>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UrgentNeed;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport Freelancer from \"./Components/Freelancer/Freelancer\";\nimport DonateUs from \"./Components/DonateUs/DonateUs\";\nimport About from \"./Components/About/About\";\nimport UrgentNeed from \"./Components/UrgentNeed/UrgentNeed\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/home\">\n          <Home></Home>\n        </Route>\n\n        <Route path=\"/freelancer\">\n          <Freelancer></Freelancer>\n        </Route>\n\n        <Route path=\"/company\">\n          <Freelancer></Freelancer>\n        </Route>\n        <Route path=\"/DonateUs\">\n          <DonateUs></DonateUs>\n        </Route>\n\n        <Route path=\"/about\">\n          <About></About>\n        </Route>\n\n        <Route path=\"/urgent\">\n          <UrgentNeed></UrgentNeed>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}